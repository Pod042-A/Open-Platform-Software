# -*- coding: utf-8 -*-
"""static.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1etMymnR3M7eevojlBVVYJzB8FoctjgaC

# Install packages
"""

# !apt update
# !apt install chromium-chromedriver
# !cp /usr/lib/chromium-browser/chromedriver /usr/bin
# !pip install selenium

"""# Import packages

## Selenium
"""

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
import chromedriver_autoinstaller

chromedriver_autoinstaller.install()

chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--no-sandbox')
chrome_options.headless = True
driver = webdriver.Chrome(options=chrome_options)

"""## Standard Library"""

import re
import json
import time

"""# Access Website

## Get website informations
---
- 車站名稱
- 車站連結
"""

driver.get('https://www.tymetro.com.tw/tymetro-new/tw/index.php')
車站連結 = [element for element in driver.find_elements(by=By.CSS_SELECTOR, value='a[href*="/tymetro-new/tw/_pages/travel-guide/A"]') if re.match(r'^A\d{1,2} .+站$', element.get_attribute('title'))]

車站資訊 = [{'車站名稱': element.get_attribute('title'), '車站連結': element.get_attribute('href')} for element in 車站連結]

def crawler(url: str) -> dict:
    driver.get(url)
    車站資訊 = dict()

    車站資訊['車站資訊'] = dict()
    車站資訊['車站資訊']['車站立體圖'] = driver.find_element(by=By.CSS_SELECTOR, value='a[alt$="立體圖"]').get_attribute('href')
    車站資訊['車站資訊']['車站地址'] = [element.get_attribute('textContent') for element in driver.find_elements(by=By.CSS_SELECTOR, value='dd') if not re.match(r'^\d{2}:\d{2}~', element.text)][0].replace('google map', '').strip()
    營業時間 = [element.get_attribute('textContent') for element in driver.find_elements(by=By.CSS_SELECTOR, value='dd') if re.match(r'^\d{2}:\d{2}~', element.text)][0].split(sep='~')
    車站資訊['車站資訊']['營業時間'] = dict()
    車站資訊['車站資訊']['營業時間']['start'] = 營業時間[0]
    車站資訊['車站資訊']['營業時間']['end'] = 營業時間[1]
    售票時間 = driver.find_element(by=By.CSS_SELECTOR, value='dd.hidden').get_attribute('textContent').split(sep='~')
    車站資訊['車站資訊']['售票時間'] = dict()
    車站資訊['車站資訊']['售票時間']['start'] = 售票時間[0]
    車站資訊['車站資訊']['售票時間']['end'] = 售票時間[1]

    車站資訊['車站服務位置說明'] = dict()
    divs = driver.find_elements(by=By.CSS_SELECTOR, value='div')
    for index in range(len(divs)):
        match(divs[index].get_attribute('textContent')):
            case '詢問處：':
                車站資訊['車站服務位置說明']['詢問處'] = re.sub(r'^\s+|\s+$|\t+', '', divs[index+1].get_attribute('textContent'))
                
            case '飲用水：':
                車站資訊['車站服務位置說明']['飲用水'] = divs[index+1].get_attribute('textContent')
                
            case '洗手間：':
                車站資訊['車站服務位置說明']['洗手間'] = divs[index+1].get_attribute('textContent')
                
            case '無障礙電梯：':
                車站資訊['車站服務位置說明']['無障礙電梯'] = re.sub(r'^\s+|\s+$|\t+', '', divs[index+1].get_attribute('textContent'))
                
            case '置物櫃：':
                車站資訊['車站服務位置說明']['置物櫃'] = re.sub(r'^\s+|\s+$|\t+', '', divs[index+1].get_attribute('textContent'))
                
            case '哺乳室：':
                車站資訊['車站服務位置說明']['哺乳室'] = divs[index+1].get_attribute('textContent')
                

    車站資訊['出口資訊'] = list()
    表格資料 = [re.sub(r'\n+|\t+', '', element.get_attribute('innerHTML')) for element in driver.find_elements(by=By.TAG_NAME, value='td')]
    for index in range(len(表格資料) - 2):
        if re.match(r'^出口\d+$', 表格資料[index]):
            出口資訊 = dict()
            出口資訊['出口編號'] = 表格資料[index]
            出口資訊['位置描述'] = 表格資料[index+1]
            if 表格資料[index+2] == '&nbsp;':
                出口資訊['備註'] = None
            else:
                出口資訊['備註'] = 表格資料[index+2]
            車站資訊['出口資訊'].append(出口資訊)

    車站資訊['轉乘資訊'] = list()
    路線名稱 = [element.get_attribute('textContent') for element in driver.find_elements(by=By.CSS_SELECTOR, value='.bus_name')]
    起站終點站 = [element.get_attribute('textContent').split(sep=' -') for element in driver.find_elements(by=By.CSS_SELECTOR, value='.road')]
    營運業者 = [element.get_attribute('textContent') for element in driver.find_elements(by=By.CSS_SELECTOR, value='#interchange td:nth-child(3) p')]
    路線類別 = [element.get_attribute('textContent') for element in driver.find_elements(by=By.CSS_SELECTOR, value='#interchange td:nth-child(4)')]
    for index in range(len(路線名稱)):
        車站資訊['轉乘資訊'].append({
            '路線名稱': 路線名稱[index],
            '起站': 起站終點站[index][0],
            '終點站': 起站終點站[index][1],
            '營運業者': 營運業者[index],
            '路線類別': 路線類別[index]
        })

    return 車站資訊

for index in range(len(車站資訊)):
    車站資訊[index]['車站資訊'] = crawler(車站資訊[index]['車站連結'])
    time.sleep(2)

with open(file='static.json', encoding='utf-8', mode='w') as ofs:
    ofs.write(json.dumps(obj=車站資訊, ensure_ascii=False, indent=4))

print(json.dumps(obj=車站資訊, ensure_ascii=False, indent=4))

"""# Quit driver"""

driver.quit()
